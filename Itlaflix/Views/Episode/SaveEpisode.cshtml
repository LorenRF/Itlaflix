<!-- Vista SaveEpisode -->
@using Itlaflix.Core.Application.ViewModel.episode 
@model SaveEpisodeViewModel  // Define el modelo de vista que se utilizará en esta vista

@{
    bool editMode = Model.Id == 0 ? false : true;  // Determina si la vista está en modo de edición o creación
    ViewData["Title"] = "Episodes";  // Establece el título de la vista
}

<div class="card">
    <h5 class="card-header">@(editMode ? $"Editando: {Model.Name}" : "Agregando un nuevo episodio")</h5>
    <div class="card-body">
        <form method="post" asp-controller="Episode" asp-action="@(editMode ? "Edit" : "Create")">
            <h5 class="card-title">@(editMode ? "Editar" : "Agregar")</h5>

            <!-- Campo para el nombre -->
            <div class="mb-3">
                <label asp-for="Name" class="form-label">Name:</label>
                <input asp-for="Name" type="text" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <!-- Campo para la descripción -->
            <div class="mb-3">
                <label asp-for="Description" class="form-label">Description:</label>
                <textarea asp-for="Description" class="form-control" aria-label="With textarea"></textarea>
            </div>

            <!-- Campo para el género -->
            <div class="mb-3">
                <label asp-for="Season" class="form-label">Temporada:</label>
                @if (Model.seasonList.Count == 0)
                {
                    <input type="checkbox" class="btn-check" id="btn-check-6" autocomplete="off" disabled>
                    <label class="btn" for="btn-check-6">Aún no se han agregado temporadas</label>
                }
                else
                {
                    @foreach (var temporada in Model.seasonList)
                    {
                        <input type="checkbox" class="btn-check" id="btn-check-4" autocomplete="off">
                        <label class="btn" for="btn-check-4">@temporada.Id</label>
                    }
                }
                <span asp-validation-for="Season" class="text-danger"></span>
            </div>

            <!-- Campo para la imagen -->
            <div class="mb-3">
                <label asp-for="imagePath" class="form-label">Image:</label>
                <input asp-for="imagePath" class="form-select" type="url">
            </div>

            <!-- Campo para el Fecha de lanzamiento -->
            <div class="input-group mb-3">
                <span asp-for="ReleaseDate" class="input-group-text" id="inputGroup-sizing-default" style="width:220px;">Fecha de lanzamiento</span>
                <input asp-for="ReleaseDate" type="date" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default" id="releaseDateInput">
            </div>
            <div class="mb-3">
                <label asp-for="url" class="form-label">URL:</label>
                <input asp-for="url" type="text" class="form-control" />
                <span asp-validation-for="url" class="text-danger"></span>
            </div>
           
            <!-- Campo oculto para el Id -->
            <input type="hidden" asp-for="Id" />

            <!-- Botones para guardar y volver -->
            <button type="submit" class="btn btn-outline-primary float-end">Guardar</button>
            <a asp-controller="Episode" asp-action="Index" class="btn btn-outline-success">Volver</a>
        </form>
    </div>
</div>


<script>
    // Obtén el elemento del input por su ID
    var releaseDateInput = document.getElementById('releaseDateInput');

    // Obtiene la fecha actual en el formato YYYY-MM-DD
    var currentDate = new Date().toISOString().split('T')[0];

    // Establece el valor inicial del input al día actual
    releaseDateInput.value = currentDate;
</script>
